function [scenario, egoVehicle,trafficLightMode] = scenario_final()


%% Construct a drivingScenario object.
scenario = drivingScenario();
scenario.SampleTime = 0.1;
scenario.StopTime = 120;    % Stop time in seconds
trafficLightMode = "Cycle";  % Possible are: Cycle, SteadyGreen, SteadyRed
%% Add all road segments
roadCenters = [74.55 0 0;
    -60 0 0];
marking = [laneMarking('Solid')
    laneMarking('Dashed')
    laneMarking('DoubleSolid', 'Color', [0.98 0.86 0.36])
    laneMarking('Dashed')
    laneMarking('Solid')];
laneSpecification = lanespec(4, 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification);

roadCenters = [0 67.3 0;
    0 -67.3 0];
marking = [laneMarking('Solid')
    laneMarking('Dashed')
    laneMarking('DoubleSolid', 'Color', [0.98 0.86 0.36])
    laneMarking('Dashed')
    laneMarking('Solid')];
laneSpecification = lanespec(4, 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification);

roadCenters = [67.3 74.55 0;
    67.3 -74.55 0];
marking = [laneMarking('Solid')
    laneMarking('Dashed')
    laneMarking('DoubleSolid', 'Color', [0.98 0.86 0.36])
    laneMarking('Dashed')
    laneMarking('Solid')];
laneSpecification = lanespec(4, 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification);

roadCenters = [67.3 -67.3 0;
    -60 -67.3 0];
marking = [laneMarking('Solid')
    laneMarking('Dashed')
    laneMarking('DoubleSolid', 'Color', [0.98 0.86 0.36])
    laneMarking('Dashed')
    laneMarking('Solid')];
laneSpecification = lanespec(4, 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification);

roadCenters = [67.3 67.3 0;
    -60 67.3 0];
marking = [laneMarking('Solid')
    laneMarking('Dashed')
    laneMarking('DoubleSolid', 'Color', [0.98 0.86 0.36])
    laneMarking('Dashed')
    laneMarking('Solid')];
laneSpecification = lanespec(4, 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification);

%% parking lot
roadCenters = [30 -67.3;
               30 -55];
road(scenario,roadCenters,Name="Road1");
lot = parkingLot(scenario,[59 -8; 8 -8; 8 -59; 59 -59]);
% Create the parking spaces.
cars = parkingSpace(Width=3.3);
accessible = parkingSpace(Type="Accessible");
accessibleLane = parkingSpace(Type="NoParking",MarkingColor=[1 1 1],Width=1.5);
fireLane = parkingSpace(Type="NoParking",Length=2,Width=45);

% Insert the parking spaces.
insertParkingSpaces(lot,cars, 13 ,Edge=2, Offset=2); % Top edge
insertParkingSpaces(lot,cars,13, Edge=4, Offset=4); % Bottom edge
insertParkingSpaces(lot, [cars accessibleLane accessible accessibleLane accessible], ...
    [5 1 1 1 1],Rows=2,Position=[33 -18]);

insertParkingSpaces(lot,fireLane,1,Edge=1,Offset=3); % Left edge

%% Add Actors
% Add the ego vehicle
egoVehicle = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position',[29.5 -67.8 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car');
waypoints = [30.5 -65.7 0;
    33.94 -55.89 0];
speed = 2;
trajectory(egoVehicle, waypoints, speed);

car = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-1.63834957991688 57.2902555927951 0], ...
    'FrontOverhang', 0.9, ...
    'Wheelbase', 2.8, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [183 70 255] / 255, ...
    'Name', 'Car');
waypoints = [-1.75358600505738 60.1127128421427 0;
    -2.3 15.9 0;
    -2 -41.8 0;
    -2.3 -63 0;
    -4.8 -68.4 0;
    -11.1 -70.3 0;
    -21.3 -70.9 0;
    -55.8 -72.2 0];
speed = [9;5;5;5;5;5;5;5];
trajectory(car, waypoints, speed);

truck = vehicle(scenario, ...
    'ClassID', 2, ...
    'Length', 8.2, ...
    'Width', 2.5, ...
    'Height', 3.5, ...
    'Position', [-41 -1.8 0.01], ...
    'FrontOverhang', 4.4, ...
    'Mesh', driving.scenario.truckMesh, ...
    'PlotColor', [183 70 255] / 255, ...
    'Name', 'Car');
waypoints = [-42.8 -2.3 0;
    0 -1.8 0.01;
    31.5 -2.7 0;
    48.6 -2.1 0;
    60.5 -2.1 0;
    67.7 -0.2 0;
    70.6 6.7 0;
    71.9 16.8 0;
    71.9 42 0;
    71.9 58.4 0];
speed = [9;9;8;8;5;4;5;6;8;0];
trajectory(truck, waypoints, speed);



%% Parked vehicles
vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [54.11 -44.9 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [90 70 120] / 255, ...
    'Name', 'Car');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [53.8 -48.18 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [120 70 50] / 255, ...
    'Name', 'Car');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [53.82 -34.24 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [120 200 50] / 255, ...
    'Name', 'Car');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [54.5 -30.5 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [100 20 180] / 255, ...
    'Name', 'Car');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [53.5 -20.6 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [50 200 50] / 255, ...
    'Name', 'Car');
% sur
vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [9.7 -44.9 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [90 70 120] / 255, ...
    'Name', 'Car');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [9.8 -48.18 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [120 70 50] / 255, ...
    'Name', 'Car');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [9.92 -34.24 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [120 200 50] / 255, ...
    'Name', 'Car');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [9.5 -30.5 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [100 20 180] / 255, ...
    'Name', 'Car');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [9.88 -20.6 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [50 200 50] / 255, ...
    'Name', 'Car');
%center
vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [34.1 -22.97 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [200 100 50] / 255, ...
    'Name', 'Car');

vehicle(scenario, ...
    'ClassID', 1, ...
    'Length', 4.7, ...
    'Position', [28 -23.27 0], ...
    'Pitch', -0.00535372687209605, ...
    'RearOverhang', 1, ...
    'FrontOverhang', 0.9, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [200 240 50] / 255, ...
    'Name', 'Car');


%% buildings
actor(scenario, ...
    'ClassID', 8, ...
    'Length', 40, ...
    'Width', 50, ...
    'Height', 20, ...
    'Position', [-28.5 33.9 0], ...
    'PlotColor', [0 0.447 0.741], ...
    'Name', 'Building');

actor(scenario, ...
    'ClassID', 8, ...
    'Length', 25, ...
    'Width', 50, ...
    'Height', 20, ...
    'Position', [-20.9 -33.5 0], ...
    'PlotColor', [0.929 0.694 0.125], ...
    'Name', 'Building2');

actor(scenario, ...
    'ClassID', 8, ...
    'Length', 50, ...
    'Width', 25, ...
    'Height', 20, ...
    'Position', [33.9 47.3 0], ...
    'PlotColor', [0.494 0.184 0.556], ...
    'Name', 'Building3');

actor(scenario, ...
    'ClassID', 8, ...
    'Length', 50, ...
    'Width', 25, ...
    'Height', 20, ...
    'Position', [33.6 21.1 0], ...
    'PlotColor', [0.466 0.674 0.188], ...
    'Name', 'Building4');

actor(scenario, ...
    'ClassID', 8, ...
    'Length', 25, ...
    'Width', 50, ...
    'Height', 20, ...
    'Position', [-48.4333333333333 -34 0], ...
    'PlotColor', [162 20 47] / 255, ...
    'Name', 'Building7');






SF_std=0;
assignin('base','SF_std',SF_std);

end


